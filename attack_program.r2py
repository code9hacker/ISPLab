# Case 1 - New file - read should give SE
# Case 2 - New file - write valid - read should give SE
# Case 3 - New file - write invalid - read should give SE
# Case 4 - New file - write valid - close file - read should give valid on next open
# Case 5 - New file - write invalid - close file - read should give SE on next open
# Case 6 - Old file - read should give valid -- same as Case 4
# Case 7 - Old file - write valid - read should give old valid content
# Case 8 - Old file - write invalid - read should give old valid content
# Case 9 - Old file - write valid - close - read should give new content on next open
# Case 10 - Old file - write invalid - close - read should give old content on next open
# Case 11 - Multithreading - Two instances of same file - first one closes with valid write, second one writes invalid - read should return first valid

if "testfile.txt.a" in listfiles():
    removefile("testfile.txt.a")
if "testfile.txt.b" in listfiles():
    removefile("testfile.txt.b")
myfile = ABopenfile("testfile.txt", True)  # Create an AB file

# I should get 'SE' when reading an empty file...
assert ('SE' == myfile.readat(None, 0))

# put some valid data in the file.
myfile.writeat("Stest12345E", 0)

# Close the file
myfile.close()

myfile = ABopenfile("testfile.txt", False)

# I should still get 'SE' because the file wasn't closed.
assert ('Stest12345E' == myfile.readat(None, 0))

# Close the file
myfile.close()
